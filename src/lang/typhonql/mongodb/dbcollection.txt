void	addOption​(int option)	
Deprecated. 
Replaced with DBCursor.addOption(int)
AggregationOutput	aggregate​(DBObject firstOp, DBObject... additionalOps)	
Deprecated. 
Use aggregate(List, AggregationOptions) instead
AggregationOutput	aggregate​(List<? extends DBObject> pipeline)	
Deprecated. 
Use aggregate(List, AggregationOptions) instead
Cursor	aggregate​(List<? extends DBObject> pipeline, AggregationOptions options)	
Method implements aggregation framework.
Cursor	aggregate​(List<? extends DBObject> pipeline, AggregationOptions options, ReadPreference readPreference)	
Method implements aggregation framework.
AggregationOutput	aggregate​(List<? extends DBObject> pipeline, ReadPreference readPreference)	
Deprecated. 
Use aggregate(List, AggregationOptions, ReadPreference) )} instead
long	count​()	
Same as getCount()
long	count​(DBObject query)	
Same as getCount(DBObject)
long	count​(DBObject query, DBCollectionCountOptions options)	
Get the count of documents in collection that would match a criteria.
long	count​(DBObject query, ReadPreference readPreference)	
Get the count of documents in collection that would match a criteria.
void	createIndex​(DBObject keys)	
Creates an index on the field specified, if that index does not already exist.
void	createIndex​(DBObject keys, DBObject options)	
Creates an index on the field specified, if that index does not already exist.
void	createIndex​(DBObject keys, String name)	
Forces creation of an index on a set of fields, if one does not already exist.
void	createIndex​(DBObject keys, String name, boolean unique)	
Forces creation of an index on a set of fields, if one does not already exist.
void	createIndex​(String name)	
Forces creation of an ascending index on a field with the default options.
List	distinct​(String fieldName)	
Find the distinct values for a specified field across a collection and returns the results in an array.
List	distinct​(String fieldName, DBCollectionDistinctOptions options)	
Find the distinct values for a specified field across a collection and returns the results in an array.
List	distinct​(String fieldName, DBObject query)	
Find the distinct values for a specified field across a collection and returns the results in an array.
List	distinct​(String fieldName, DBObject query, ReadPreference readPreference)	
Find the distinct values for a specified field across a collection and returns the results in an array.
List	distinct​(String fieldName, ReadPreference readPreference)	
Find the distinct values for a specified field across a collection and returns the results in an array.
void	drop​()	
Drops (deletes) this collection from the database.
void	dropIndex​(DBObject index)	
Drops an index from this collection.
void	dropIndex​(String indexName)	
Drops the index with the given name from this collection.
void	dropIndexes​()	
Drop all indexes on this collection.
void	dropIndexes​(String indexName)	
Drops the index with the given name from this collection.
CommandResult	explainAggregate​(List<? extends DBObject> pipeline, AggregationOptions options)	
Return the explain plan for the aggregation pipeline.
DBCursor	find​()	
Select all documents in collection and get a cursor to the selected documents.
DBCursor	find​(DBObject query)	
Select documents in collection and get a cursor to the selected documents.
DBCursor	find​(DBObject query, DBCollectionFindOptions options)	
Select documents in collection and get a cursor to the selected documents.
DBCursor	find​(DBObject query, DBObject projection)	
Select documents in collection and get a cursor to the selected documents.
DBCursor	find​(DBObject query, DBObject projection, int numToSkip, int batchSize)	
Deprecated. 
use DBCursor.skip(int) and DBCursor.batchSize(int) on the DBCursor returned from find(DBObject, DBObject)
DBCursor	find​(DBObject query, DBObject projection, int numToSkip, int batchSize, int options)	
Deprecated. 
use DBCursor.skip(int), DBCursor.batchSize(int) and DBCursor.setOptions(int) on the DBCursor returned from find(DBObject, DBObject)
DBObject	findAndModify​(DBObject query, DBCollectionFindAndModifyOptions options)	
Atomically modify and return a single document.
DBObject	findAndModify​(DBObject query, DBObject update)	
Atomically modify and return a single document.
DBObject	findAndModify​(DBObject query, DBObject sort, DBObject update)	
Atomically modify and return a single document.
DBObject	findAndModify​(DBObject query, DBObject fields, DBObject sort, boolean remove, DBObject update, boolean returnNew, boolean upsert)	
Atomically modify and return a single document.
DBObject	findAndModify​(DBObject query, DBObject fields, DBObject sort, boolean remove, DBObject update, boolean returnNew, boolean upsert, boolean bypassDocumentValidation, long maxTime, TimeUnit maxTimeUnit)	
Atomically modify and return a single document.
DBObject	findAndModify​(DBObject query, DBObject fields, DBObject sort, boolean remove, DBObject update, boolean returnNew, boolean upsert, boolean bypassDocumentValidation, long maxTime, TimeUnit maxTimeUnit, WriteConcern writeConcern)	
Atomically modify and return a single document.
DBObject	findAndModify​(DBObject query, DBObject fields, DBObject sort, boolean remove, DBObject update, boolean returnNew, boolean upsert, long maxTime, TimeUnit maxTimeUnit)	
Atomically modify and return a single document.
DBObject	findAndModify​(DBObject query, DBObject fields, DBObject sort, boolean remove, DBObject update, boolean returnNew, boolean upsert, long maxTime, TimeUnit maxTimeUnit, WriteConcern writeConcern)	
Atomically modify and return a single document.
DBObject	findAndModify​(DBObject query, DBObject fields, DBObject sort, boolean remove, DBObject update, boolean returnNew, boolean upsert, WriteConcern writeConcern)	
Atomically modify and return a single document.
DBObject	findAndRemove​(DBObject query)	
Atomically remove and return a single document.
DBObject	findOne​()	
Get a single document from collection.
DBObject	findOne​(DBObject query)	
Get a single document from collection.
DBObject	findOne​(DBObject query, DBCollectionFindOptions findOptions)	
Get a single document from collection.
DBObject	findOne​(DBObject query, DBObject projection)	
Get a single document from collection.
DBObject	findOne​(DBObject query, DBObject projection, DBObject sort)	
Get a single document from collection.
DBObject	findOne​(DBObject query, DBObject projection, DBObject sort, ReadPreference readPreference)	
Get a single document from collection.
DBObject	findOne​(DBObject query, DBObject projection, ReadPreference readPreference)	
Get a single document from collection.
DBObject	findOne​(Object id)	
Get a single document from collection by '_id'.
DBObject	findOne​(Object id, DBObject projection)	
Get a single document from collection by '_id'.
DBCollection	getCollection​(String name)	
Find a collection that is prefixed with this collection's name.
long	getCount​()	
Get the count of documents in collection.
long	getCount​(DBObject query)	
Get the count of documents in collection that would match a criteria.
long	getCount​(DBObject query, DBCollectionCountOptions options)	
Get the count of documents in collection that would match a criteria.
long	getCount​(DBObject query, DBObject projection)	
Deprecated. 
Prefer count(DBObject, DBCollectionCountOptions)
long	getCount​(DBObject query, DBObject projection, long limit, long skip)	
Deprecated. 
Prefer count(DBObject, DBCollectionCountOptions)
long	getCount​(DBObject query, DBObject projection, long limit, long skip, ReadPreference readPreference)	
Deprecated. 
Prefer count(DBObject, DBCollectionCountOptions)
long	getCount​(DBObject query, DBObject projection, ReadPreference readPreference)	
Deprecated. 
Prefer count(DBObject, DBCollectionCountOptions)
long	getCount​(ReadPreference readPreference)	
Get the count of documents in collection.
DB	getDB​()	
Returns the database this collection is a member of.
DBDecoderFactory	getDBDecoderFactory​()	
Get the decoder factory for this collection.
DBEncoderFactory	getDBEncoderFactory​()	
Get the encoder factory for this collection.
String	getFullName​()	
Get the full name of a collection, with the database name as a prefix.
List<DBObject>	getHintFields​()	
Deprecated. 
Prefer DBCursor.hint(DBObject)
List<DBObject>	getIndexInfo​()	
Return a list of the indexes for this collection.
protected Class<? extends DBObject>	getInternalClass​(String path)	
Gets the internal class for the given path in the document hierarchy
String	getName​()	
Get the name of a collection.
Class	getObjectClass​()	
Gets the default class for objects in the collection
int	getOptions​()	
Deprecated. 
Replaced with DBCursor.getOptions()
ReadConcern	getReadConcern​()	
Get the read concern for this collection.
ReadPreference	getReadPreference​()	
Gets the ReadPreference.
CommandResult	getStats​()	
The collStats command returns a variety of storage statistics for a given collection
WriteConcern	getWriteConcern​()	
Get the WriteConcern for this collection.
DBObject	group​(DBObject key, DBObject cond, DBObject initial, String reduce)	
Deprecated. 
The group command was deprecated in MongoDB 3.4
DBObject	group​(DBObject key, DBObject cond, DBObject initial, String reduce, String finalize)	
Deprecated. 
The group command was deprecated in MongoDB 3.4
DBObject	group​(DBObject key, DBObject cond, DBObject initial, String reduce, String finalize, ReadPreference readPreference)	
Deprecated. 
The group command was deprecated in MongoDB 3.4
DBObject	group​(GroupCommand cmd)	
Deprecated. 
The group command was deprecated in MongoDB 3.4
DBObject	group​(GroupCommand cmd, ReadPreference readPreference)	
Deprecated. 
The group command was deprecated in MongoDB 3.4
BulkWriteOperation	initializeOrderedBulkOperation​()	
Creates a builder for an ordered bulk write operation, consisting of an ordered collection of write requests, which can be any combination of inserts, updates, replaces, or removes.
BulkWriteOperation	initializeUnorderedBulkOperation​()	
Creates a builder for an unordered bulk operation, consisting of an unordered collection of write requests, which can be any combination of inserts, updates, replaces, or removes.
WriteResult	insert​(DBObject... documents)	
Insert documents into a collection.
WriteResult	insert​(DBObject[] documents, WriteConcern writeConcern)	
Insert documents into a collection.
WriteResult	insert​(DBObject[] documents, WriteConcern aWriteConcern, DBEncoder encoder)	
Insert documents into a collection.
WriteResult	insert​(DBObject document, WriteConcern writeConcern)	
Insert a document into a collection.
WriteResult	insert​(WriteConcern writeConcern, DBObject... documents)	
Insert documents into a collection.
WriteResult	insert​(List<? extends DBObject> documents)	
Insert documents into a collection.
WriteResult	insert​(List<? extends DBObject> documents, InsertOptions insertOptions)	
Insert documents into a collection.
WriteResult	insert​(List<? extends DBObject> documents, WriteConcern aWriteConcern)	
Insert documents into a collection.
WriteResult	insert​(List<? extends DBObject> documents, WriteConcern aWriteConcern, DBEncoder dbEncoder)	
Insert documents into a collection.
boolean	isCapped​()	
Checks whether this collection is capped
MapReduceOutput	mapReduce​(MapReduceCommand command)	
Allows you to run map-reduce aggregation operations over a collection.
MapReduceOutput	mapReduce​(String map, String reduce, String outputTarget, DBObject query)	
Allows you to run map-reduce aggregation operations over a collection.
MapReduceOutput	mapReduce​(String map, String reduce, String outputTarget, MapReduceCommand.OutputType outputType, DBObject query)	
Allows you to run map-reduce aggregation operations over a collection and saves to a named collection.
MapReduceOutput	mapReduce​(String map, String reduce, String outputTarget, MapReduceCommand.OutputType outputType, DBObject query, ReadPreference readPreference)	
Allows you to run map-reduce aggregation operations over a collection and saves to a named collection.
List<Cursor>	parallelScan​(ParallelScanOptions options)	
Deprecated. 
the parallelCollectionScan command will be removed in MongoDB 4.2
WriteResult	remove​(DBObject query)	
Remove documents from a collection.
WriteResult	remove​(DBObject query, DBCollectionRemoveOptions options)	
Remove documents from a collection.
WriteResult	remove​(DBObject query, WriteConcern writeConcern)	
Remove documents from a collection.
WriteResult	remove​(DBObject query, WriteConcern writeConcern, DBEncoder encoder)	
Remove documents from a collection.
DBCollection	rename​(String newName)	
Change the name of an existing collection.
DBCollection	rename​(String newName, boolean dropTarget)	
Change the name of an existing collection.
void	resetOptions​()	
Deprecated. 
Replaced with DBCursor.resetOptions()
WriteResult	save​(DBObject document)	
Update an existing document or insert a document depending on the parameter.
WriteResult	save​(DBObject document, WriteConcern writeConcern)	
Update an existing document or insert a document depending on the parameter.
void	setDBDecoderFactory​(DBDecoderFactory factory)	
Set a custom decoder factory for this collection.
void	setDBEncoderFactory​(DBEncoderFactory factory)	
Set a custom encoder factory for this collection.
void	setHintFields​(List<? extends DBObject> indexes)	
Deprecated. 
Prefer DBCursor.hint(DBObject)
void	setInternalClass​(String path, Class<? extends DBObject> aClass)	
Sets the internal class for the given path in the document hierarchy
void	setObjectClass​(Class<? extends DBObject> aClass)	
Sets a default class for objects in this collection; null resets the class to nothing.
void	setOptions​(int options)	
Deprecated. 
Replaced with DBCursor.setOptions(int)
void	setReadConcern​(ReadConcern readConcern)	
Sets the read concern for this collection.
void	setReadPreference​(ReadPreference preference)	
Sets the ReadPreference for this collection.
void	setWriteConcern​(WriteConcern writeConcern)	
Set the WriteConcern for this collection.
void	slaveOk​()	
Deprecated. 
Replaced with ReadPreference.secondaryPreferred()
WriteResult	update​(DBObject query, DBObject update)	
Modify an existing document.
WriteResult	update​(DBObject query, DBObject update, boolean upsert, boolean multi)	
Modify an existing document or documents in collection.
WriteResult	update​(DBObject query, DBObject update, boolean upsert, boolean multi, WriteConcern aWriteConcern)	
Modify an existing document or documents in collection.
WriteResult	update​(DBObject query, DBObject update, boolean upsert, boolean multi, WriteConcern concern, DBEncoder encoder)	
Modify an existing document or documents in collection.
WriteResult	update​(DBObject query, DBObject update, boolean upsert, boolean multi, WriteConcern concern, Boolean bypassDocumentValidation, DBEncoder encoder)	
Modify an existing document or documents in collection.
WriteResult	update​(DBObject query, DBObject update, DBCollectionUpdateOptions options)	
Modify an existing document or documents in collection.
WriteResult	updateMulti​(DBObject query, DBObject update)