customdatatype address {
	street: string[256],
	city: string[256],
	zipcode: zip,
	location: point
}
customdatatype zip {
	nums: string[4],
	letters: string[2]
}
entity Review {
	content : text
	location: point
	screenshot: blob
	product -> Product[1]
	user -> User[1]
}
entity Product {
	name : string[256]
	description : string[256]
	price : int
	productionDate : date
	availabilityRegion: polygon
	reviews :-> Review."Review.product"[0..*]
	tags -> Tag[0..*]
	inventory :-> Item[0..*]
	category -> Category[1]
	wish :-> Wish."Wish.product"[1]
}
entity Category {
	id: string[32]
	name: string[32]
}
entity Item {
	shelf: int
	picture: blob
	product -> Product."Product.inventory"[1]
}
entity Tag {
	name: string[64]
	synonymsFrom :-> Synonym."Synonym.source"[0..*]
	synonymsTo :-> Synonym."Synonym.target"[0..*]
}

entity Synonym {
	weight: int
	source -> Tag[1]
	target -> Tag[1]
}

entity User {
	name : string[256]
	address: string[256]
	billing: address
	location: point
	photoURL: string[256]
	avatarURL: string[256]
	biography :-> Biography."Biography.user"[0..1]
	reviews -> Review."Review.user"[0..*]
	wish :-> Wish."Wish.user"[1]
}
entity Biography {
	content : string[256]
	user -> User."User.biography"[1]
}
entity Concordance {
	weight: int
	source -> Product[1]
	target -> Product[1]
}
entity Wish {
	intensity: int
	user -> User[1]
	product -> Product[1]
}

keyvaluedb Stuff {
	elements {
		User { userKey -> ("User.photoURL", "User.avatarURL") } 
	}
}
documentdb Reviews {
	collections {
		Review : Review
		Biography : Biography
		Category: Category
	}
}

relationaldb Inventory {
	tables {
		table {
			UserDB : User
			index UserNameIndex {
				attributes (name, location)
			}
		}
		table {
			ProductDB : Product
		}
		table { TagDB: Tag }
		table { ItemDB: Item }
	}
}

graphdb MoreStuff {
	edges {
		edge Wish {
			from user
			to product
		},
		edge Concordance {
			from source
			to target
		},
		edge Synonym {
			from source
			to target
		}		
	}
}
